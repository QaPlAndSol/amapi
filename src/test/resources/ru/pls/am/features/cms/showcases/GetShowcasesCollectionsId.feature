# language: ru

@all
@showcases
Функционал: Получение коллекции по id

#  Структура сценария: id опубликованной коллекции с опубликованным контентом с лицензионными данными с опубликованным видео и опубликованным жанром контента
#    Когда отправляем get запрос к сервису "CMS" с параметрами:
#      | endpoint | |/showcases/collections/<id>/ |
#    Тогда статус-код ответа 200
#    Тогда json ответа сервера проходит валидацию по схеме "cms/ShowcasesCollectionsDefault.json"
#    Тогда json ответа сервера содержит поля:
#      | id     | integer | <id>                                                        |
#      | title  | string  | <title>                                                     |
#      | type   | string  | <type>                                                      |
#      | slug   | string  | <slug>                                                      |
#      | url    | string  | https://cms.plsolutions.pro/api/v1/showcases/collections/2/ |
#      | webUrl | string  | https://cms.plsolutions.pro/collections/premieri-nedeli     |

#  Структура сценария: id коллекции с частично опубликованным контентом
#  Структура сценария: id коллекции с опубликованным контентом с лицензионными данными с опубликованным видео и не опубликованным жанром контента
#  Структура сценария: id коллекции с опубликованным контентом с лицензионными данными с не опубликованным видео

  Структура сценария: id коллекции с опубликованным контентом с лицензионными данными без видео и не опубликованным жанром контента
    Дано пользователь "<user>" создает жанр "<genre_name>"
    Дано пользователь "<user>" публикует жанр "<genre_name>"
    Дано пользователь "<user>" создает полнометражный фильм "<movie_name>" с годом премьеры "<release_year>" жанром "<genre_name>"
    Дано пользователь "<user>" добавляет фильму "<movie_name>" короткое описание:
    """
    короткое описание
    """
    Дано пользователь "<user>" добавляет фильму "<movie_name>" длинное описание:
    """
    длинное описание
    """
    Дано пользователь "<user>" добавляет фильму "<movie_name>" название для SEO "<movie_name>" описание для SEO:
    """
    описание для SEO <movie_name>
    """
    Дано пользователь "<user>" публикует полнометражный фильм "<movie_name>"
    Дано пользователь "<user>" создает правообладателя "<rightsholder>"
    Дано пользователь "<user>" создает лицензиара "<licensor>" для правообладателя "<rightsholder>"
    Дано пользователь "<user>" создает договор № "<agreement>" с лицензиаром "<licensor>" фиксированной суммой "1000" в валюте "RUR" началом действия "23.09.2018 00:00:00"
    Дано пользователь "<user>" добавляет фильм "<movie_name>" к договору "<agreement>" с лицензиаром "<licensor>" фиксированной суммой "1000" в валюте "RUR"
    Дано пользователь "<user>" создает коллекцию "<collection_name>" с id "<collection_id>"
    Дано пользователь "<user>" добавляет в коллекцию "<collection_name>" фильм "<movie_name>"
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | user             | collection_id | collection_name | genre_name | movie_name              | release_year | rightsholder      | licensor    | agreement       |
      | admin@acms.local | 1005          | Коллекция 14    | Жанр 12    | Полнометражный фильм 12 | 2000         | Правообладатель 1 | Лицензиар 1 | 1 от 23.09.2018 |

  Структура сценария: id коллекции с опубликованным контентом без лицензионных данных
    Дано пользователь "<user>" создает жанр "<genre_name>"
    Дано пользователь "<user>" публикует жанр "<genre_name>"
    Дано пользователь "<user>" создает полнометражный фильм "<movie_name>" с годом премьеры "2000" жанром "<genre_name>"
    Дано пользователь "<user>" добавляет фильму "<movie_name>" короткое описание:
    """
    короткое описание
    """
    Дано пользователь "<user>" добавляет фильму "<movie_name>" длинное описание:
    """
    длинное описание
    """
    Дано пользователь "<user>" добавляет фильму "<movie_name>" название для SEO "<movie_name>" описание для SEO:
    """
    описание для SEO <movie_name>
    """
    Дано пользователь "<user>" публикует полнометражный фильм "<movie_name>"
    Дано пользователь "<user>" создает коллекцию "<collection_name>" с id "<collection_id>"
    Дано пользователь "<user>" добавляет в коллекцию "<collection_name>" фильм "<movie_name>"
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | user             | collection_id | collection_name | genre_name | movie_name              |
      | admin@acms.local | 1005          | Коллекция 14    | Жанр 12    | Полнометражный фильм 12 |

  Структура сценария: id коллекции с не опубликованным контентом
    Дано пользователь "<user>" создает жанр "<genre_name>"
    Дано пользователь "<user>" создает полнометражный фильм "<movie_name>" с годом премьеры "2000" жанром "<genre_name>"
    Дано пользователь "<user>" создает коллекцию "<collection_name>" с id "<collection_id>"
    Дано пользователь "<user>" добавляет в коллекцию "<collection_name>" фильм "<movie_name>"
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | user             | collection_id | collection_name | genre_name | movie_name              |
      | admin@acms.local | 1003          | Коллекция 12    | Жанр 10    | Полнометражный фильм 10 |

  Структура сценария: id опубликованной коллекции без контента
    Дано пользователь "<user>" создает коллекцию "<collection_name>" с id "<collection_id>"
    Дано пользователь "<user>" публикует коллекцию "<collection_name>"
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | user             | collection_id | collection_name |
      | admin@acms.local | 1002          | Коллекция 11    |

  Структура сценария: id не опубликованной коллекции
    Дано пользователь "<user>" создает коллекцию "<collection_name>" с id "<collection_id>"
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | user             | collection_id | collection_name |
      | admin@acms.local | 1001          | Коллекция 10    |

  Структура сценария: id коллекции отсутствует в базе
    Когда отправляем get запрос к сервису "CMS" с параметрами:
      | endpoint |  | /showcases/collections/<collection_id>/ |
    Тогда статус-код ответа 404
    Тогда json ответа сервера проходит валидацию по схеме "cms/ErrorDetail.json"
    Тогда json ответа сервера содержит поля:
      | detail | string | Не найдено. |
    Примеры:
      | collection_id |
      | 0             |